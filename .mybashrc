# vim: set ft=bash:

set -o vi

alias vi='vim'
alias vim='nvim'
alias dots='git --git-dir=$HOME/.dots --work-tree=$HOME'

export HISTSIZE=30000
export HISTFILESIZE=30000

export CMAKE_EXPORT_COMPILE_COMMANDS=1
export CMAKE_GENERATOR=Ninja
export PATH=$PATH:$HOME/tools
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/usr/local/go/bin
export EDITOR=nvim

if [ ! command -v rg &> /dev/null ]; then
    export FZF_DEFAULT_COMMAND='rg --files --hidden'
fi

[ -f "$HOME/.bash_local" ] && source "$HOME/.bash_local"
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"
[ -f "/usr/share/fzf/shell/key-bindings.bash" ] && source "/usr/share/fzf/shell/key-bindings.bash"

## Learned from distrobox, thanks for the tricks!
if  [ -e /.dockerenv ]; then
	# we're in docker, let's use this trick
	CONTAINER_ID=$(grep "memory:/" < /proc/self/cgroup | sed 's|.*/||')
	## TODO -- get true container ID, not name
elif [ -e /run/.containerenv ]; then
	# we're in podman, use this other trick
	CONTAINER_ID=$(grep "^id=" /run/.containerenv | cut -d'=' -f2- | tr -d '"')
fi

export DBX_TMUX_BRIDGE=$XDG_RUNTIME_DIR/dbx-tmux
if [ -n "$TMUX" ] && [ -z $CONTAINER_ID ]; then
    tmux setenv DBX_TMUX_BRIDGE $DBX_TMUX_BRIDGE
fi
mkdir -p $DBX_TMUX_BRIDGE

if [ ! -z "$DISTROBOX_ENTER_PATH" ]; then
    DBX_TMUX_BRIDGE_OURS=$DBX_TMUX_BRIDGE/$TMUX_PANE

    mkdir -p $DBX_TMUX_BRIDGE_OURS
    trap "rm -r $DBX_TMUX_BRIDGE_OURS" EXIT

    echo ${CONTAINER_ID} > $DBX_TMUX_BRIDGE_OURS/container_id
    echo `tty` > $DBX_TMUX_BRIDGE_OURS/tty
fi

command -v starship &> /dev/null
if [ $? == 0 ]; then
    eval "$(starship init bash)"
fi

command -v direnv &> /dev/null
if [ $? == 0 ]; then
    eval "$(direnv hook bash)"
fi
